rules_version = '2';
service cloud.firestore {
match /databases/{database}/documents {
    // Budgets collection rules
    match /budgets/{budgetId} {
    // Allow read/write only if user is authenticated and budget belongs to them
    function isBudgetValid() {
        let incoming = request.resource.data;
        return incoming.size() == 6 && // Must have exactly 6 fields
            incoming.name is string && 
            incoming.name.size() > 0 && // Name must be non-empty string
            incoming.currency is string &&
            incoming.currency.size() == 3 && // Currency must be 3-letter code
            incoming.userId is string && // Must have user ID
            incoming.createdAt is timestamp && // Must have creation timestamp
            incoming.lastUpdated is timestamp && // Must have last updated timestamp
            incoming.status is string && // Must have status
            incoming.status.matches('^(active|inactive|deleted)$'); // Status must be one of these values
    }

    // Allow read access to documents owned by the user
    allow read: if request.auth != null &&
                request.auth.uid == resource.data.userId;

    // Allow creation of new budgets with validation
    allow create: if request.auth != null && 
                    isBudgetValid() &&
                    request.auth.uid == request.resource.data.userId;

    // Allow update of existing budgets with validation
    allow update: if request.auth != null && 
                    isBudgetValid() &&
                    request.auth.uid == resource.data.userId &&
                    request.auth.uid == request.resource.data.userId;
    }
}
}

