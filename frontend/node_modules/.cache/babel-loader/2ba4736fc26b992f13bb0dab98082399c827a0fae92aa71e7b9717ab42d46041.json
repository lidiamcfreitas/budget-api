{"ast":null,"code":"import { ref, onMounted } from 'vue';\nimport api from '../services/api';\nexport default {\n  name: 'BudgetList',\n  setup() {\n    const budgetItems = ref([]);\n    const loading = ref(false);\n    const error = ref(null);\n    const fetchBudgetData = async () => {\n      loading.value = true;\n      error.value = null;\n      try {\n        const response = await api.get('/budget-items');\n        budgetItems.value = response.data;\n      } catch (err) {\n        error.value = 'Failed to load budget data. Please try again later.';\n        console.error('Error fetching budget data:', err);\n      } finally {\n        loading.value = false;\n      }\n    };\n    onMounted(fetchBudgetData);\n    return {\n      budgetItems,\n      loading,\n      error,\n      fetchBudgetData\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","api","name","setup","budgetItems","loading","error","fetchBudgetData","value","response","get","data","err","console"],"sources":["/Users/lidiafreitas/frontend/src/components/BudgetList.vue"],"sourcesContent":["<template>\n<div class=\"budget-list\">\n    <h2>Budget Items</h2>\n    \n    <!-- Loading State -->\n    <div v-if=\"loading\" class=\"loading\">\n    Loading budget data...\n    </div>\n\n    <!-- Error State -->\n    <div v-else-if=\"error\" class=\"error\">\n    {{ error }}\n    <button @click=\"fetchBudgetData\">Try Again</button>\n    </div>\n\n    <!-- Data Display -->\n    <div v-else>\n    <ul v-if=\"budgetItems.length\">\n        <li v-for=\"item in budgetItems\" :key=\"item.id\" class=\"budget-item\">\n        <span class=\"item-name\">{{ item.name }}</span>\n        <span class=\"item-amount\">${{ item.amount }}</span>\n        </li>\n    </ul>\n    <p v-else class=\"empty-state\">No budget items found.</p>\n    </div>\n</div>\n</template>\n\n<script>\nimport { ref, onMounted } from 'vue'\nimport api from '../services/api'\n\nexport default {\nname: 'BudgetList',\nsetup() {\n    const budgetItems = ref([])\n    const loading = ref(false)\n    const error = ref(null)\n\n    const fetchBudgetData = async () => {\n    loading.value = true\n    error.value = null\n\n    try {\n        const response = await api.get('/budget-items')\n        budgetItems.value = response.data\n    } catch (err) {\n        error.value = 'Failed to load budget data. Please try again later.'\n        console.error('Error fetching budget data:', err)\n    } finally {\n        loading.value = false\n    }\n    }\n\n    onMounted(fetchBudgetData)\n\n    return {\n    budgetItems,\n    loading,\n    error,\n    fetchBudgetData\n    }\n}\n}\n</script>\n\n<style scoped>\n.budget-list {\nmax-width: 800px;\nmargin: 0 auto;\npadding: 20px;\n}\n\nh2 {\ncolor: #2c3e50;\nmargin-bottom: 20px;\n}\n\n.loading, .error {\ntext-align: center;\npadding: 20px;\nbackground-color: #f8f9fa;\nborder-radius: 4px;\n}\n\n.error {\ncolor: #dc3545;\n}\n\n.error button {\nmargin-top: 10px;\npadding: 8px 16px;\nbackground-color: #007bff;\ncolor: white;\nborder: none;\nborder-radius: 4px;\ncursor: pointer;\n}\n\n.error button:hover {\nbackground-color: #0056b3;\n}\n\n.budget-item {\ndisplay: flex;\njustify-content: space-between;\npadding: 12px 16px;\nmargin-bottom: 8px;\nbackground-color: white;\nborder: 1px solid #dee2e6;\nborder-radius: 4px;\n}\n\n.item-name {\nfont-weight: 500;\n}\n\n.item-amount {\ncolor: #28a745;\nfont-weight: bold;\n}\n\n.empty-state {\ntext-align: center;\ncolor: #6c757d;\nfont-style: italic;\n}\n</style>\n\n"],"mappings":"AA6BA,SAASA,GAAG,EAAEC,SAAQ,QAAS,KAAI;AACnC,OAAOC,GAAE,MAAO,iBAAgB;AAEhC,eAAe;EACfC,IAAI,EAAE,YAAY;EAClBC,KAAKA,CAAA,EAAG;IACJ,MAAMC,WAAU,GAAIL,GAAG,CAAC,EAAE;IAC1B,MAAMM,OAAM,GAAIN,GAAG,CAAC,KAAK;IACzB,MAAMO,KAAI,GAAIP,GAAG,CAAC,IAAI;IAEtB,MAAMQ,eAAc,GAAI,MAAAA,CAAA,KAAY;MACpCF,OAAO,CAACG,KAAI,GAAI,IAAG;MACnBF,KAAK,CAACE,KAAI,GAAI,IAAG;MAEjB,IAAI;QACA,MAAMC,QAAO,GAAI,MAAMR,GAAG,CAACS,GAAG,CAAC,eAAe;QAC9CN,WAAW,CAACI,KAAI,GAAIC,QAAQ,CAACE,IAAG;MACpC,EAAE,OAAOC,GAAG,EAAE;QACVN,KAAK,CAACE,KAAI,GAAI,qDAAoD;QAClEK,OAAO,CAACP,KAAK,CAAC,6BAA6B,EAAEM,GAAG;MACpD,UAAU;QACNP,OAAO,CAACG,KAAI,GAAI,KAAI;MACxB;IACA;IAEAR,SAAS,CAACO,eAAe;IAEzB,OAAO;MACPH,WAAW;MACXC,OAAO;MACPC,KAAK;MACLC;IACA;EACJ;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}